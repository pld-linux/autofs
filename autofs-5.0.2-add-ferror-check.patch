diff --git a/CHANGELOG b/CHANGELOG
index 2db9b39..dd08880 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -31,6 +31,7 @@
 - fix forground logging and add option to man page.
 - remove unjustified, nasty comment about krb5 package.
 - fix deadlock in submount mount module.
+- fix lack of ferror() checking when reading files.
 
 18/06/2007 autofs-5.0.2
 -----------------------
diff --git a/daemon/automount.c b/daemon/automount.c
index 930b13f..70a3b9d 100644
--- a/daemon/automount.c
+++ b/daemon/automount.c
@@ -978,7 +978,7 @@ static void *do_read_master(void *arg)
 	if (status)
 		fatal(status);
 
-	defaults_read_config();
+	defaults_read_config(1);
 
 	status = master_read_master(master, age, readall);
 
@@ -1465,7 +1465,7 @@ int main(int argc, char *argv[])
 
 	program = argv[0];
 
-	defaults_read_config();
+	defaults_read_config(0);
 
 	kpkt_len = get_kpkt_len();
 	timeout = defaults_get_timeout();
diff --git a/include/defaults.h b/include/defaults.h
index 46393d9..0e0e2a5 100644
--- a/include/defaults.h
+++ b/include/defaults.h
@@ -41,7 +41,7 @@
 struct ldap_schema;
 struct ldap_searchdn;
 
-unsigned int defaults_read_config(void);
+unsigned int defaults_read_config(unsigned int);
 const char *defaults_get_master_map(void);
 unsigned int defaults_get_timeout(void);
 unsigned int defaults_get_browse_mode(void);
diff --git a/lib/defaults.c b/lib/defaults.c
index bf1ceed..2cccf20 100644
--- a/lib/defaults.c
+++ b/lib/defaults.c
@@ -280,7 +280,7 @@ struct list_head *defaults_get_uris(void)
  * is valid bourne shell script without spaces around "="
  * and that it has valid values.
  */
-unsigned int defaults_read_config(void)
+unsigned int defaults_read_config(unsigned int to_syslog)
 {
 	FILE *f;
 	char buf[MAX_LINE_LEN];
@@ -312,9 +312,16 @@ unsigned int defaults_read_config(void)
 			;
 	}
 
-	if (!feof(f)) {
-		fprintf(stderr, "fgets returned error %d while reading %s\n",
-			ferror(f), DEFAULTS_CONFIG_FILE);
+	if (!feof(f) || ferror(f)) {
+		if (!to_syslog) {
+			fprintf(stderr,
+				"fgets returned error %d while reading %s\n",
+				ferror(f), DEFAULTS_CONFIG_FILE);
+		} else {
+			error(LOGOPT_ANY,
+			      "fgets returned error %d while reading %s",
+			      ferror(f), DEFAULTS_CONFIG_FILE);
+		}
 		fclose(f);
 		return 0;
 	}
diff --git a/modules/lookup_file.c b/modules/lookup_file.c
index 6346602..31ee0fb 100644
--- a/modules/lookup_file.c
+++ b/modules/lookup_file.c
@@ -442,6 +442,11 @@ int lookup_read_master(struct master *master, time_t age, void *context)
 		if (!entry) {
 			if (feof(f))
 				break;
+			if (ferror(f)) {
+				warn(LOGOPT_ANY, MODPREFIX
+				     "error reading map %s", ctxt->mapname);
+				break;
+			}
 			continue;
 		}
 
@@ -683,6 +688,11 @@ int lookup_read_map(struct autofs_point *ap, time_t age, void *context)
 		if (!entry) {
 			if (feof(f))
 				break;
+			if (ferror(f)) {
+				warn(LOGOPT_ANY, MODPREFIX
+				      "error reading map %s", ctxt->mapname);
+				break;
+			}
 			continue;
 		}
 			
@@ -848,6 +858,12 @@ static int lookup_one(struct autofs_point *ap,
 
 		if (feof(f))
 			break;
+
+		if (ferror(f)) {
+			warn(LOGOPT_ANY, MODPREFIX
+			      "error reading map %s", ctxt->mapname);
+			break;
+		}		
 	}
 
 	fclose(f);
@@ -907,6 +923,12 @@ static int lookup_wild(struct autofs_point *ap, struct lookup_context *ctxt)
 
 		if (feof(f))
 			break;
+
+		if (ferror(f)) {
+			warn(LOGOPT_ANY, MODPREFIX
+			      "error reading map %s", ctxt->mapname);
+			break;
+		}		
 	}
 
 	fclose(f);
